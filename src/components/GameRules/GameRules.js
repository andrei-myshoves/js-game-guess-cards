import { htmlToElement } from '../../utils/htmlToELement.js'
import * as styles from './GameRules.module.css'
import { levels } from '../GamePage/GamePage.js'
import { levelTimes } from '../../index.js'

function RuleItem(text) {
    return htmlToElement(`<li>${text}</li>`)
}

function DifficultyItem(label, count, time) {
    return htmlToElement(`
    <li>
      <b>${label}</b> ‚Äî ${count} –∫–∞—Ä—Ç–æ—á–µ–∫ (${count / 2} –ø–∞—Ä), ‚è± ${time} —Å–µ–∫—É–Ω–¥
    </li>
  `)
}

export function GameRules() {
    const container = htmlToElement(`
    <div class="${styles.container}">
      <ul id="rulesList" class="${styles.list}"></ul>
      <h3 class="${styles.subtitle}">–£—Ä–æ–≤–Ω–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:</h3>
      <ul id="difficultyList" class="${styles.list}"></ul>
    </div>
  `)

    container.getElementById = function (id) {
        return this.querySelector(`#${id}`)
    }

    const rules = [
        'üîç –ù–∞–π–¥–∏—Ç–µ –≤—Å–µ –ø–∞—Ä—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫.',
        '‚è≥ –í–Ω–∏–º–∞–Ω–∏–µ: –Ω–∞ –∫–∞–∂–¥—É—é —Å–ª–æ–∂–Ω–æ—Å—Ç—å –¥–∞—ë—Ç—Å—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è.',
        'üÉè –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –∏–≥—Ä—ã –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –Ω–∞ 5 —Å–µ–∫—É–Ω–¥ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ –≤—Ä–µ–º—è, —á—Ç–æ–±—ã –∑–∞–ø–æ–º–Ω–∏—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ.',
        '‚ö° –ò–≥—Ä–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ø–æ–±–µ–¥–æ–π, –µ—Å–ª–∏ –≤—ã –Ω–∞—à–ª–∏ –≤—Å–µ –ø–∞—Ä—ã –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞.',
        'üí• –ï—Å–ª–∏ –≤—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ ‚Äî –∏–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –ø–æ—Ä–∞–∂–µ–Ω–∏–µ–º.',
    ]

    const rulesList = container.getElementById('rulesList')
    rules.forEach(rule => rulesList.appendChild(RuleItem(rule)))

    const difficulties = [
        { label: 'ü•â –õ—ë–≥–∫–∏–π —É—Ä–æ–≤–µ–Ω—å', key: 'easy' },
        { label: 'ü•à –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å', key: 'medium' },
        { label: 'ü•á –°–ª–æ–∂–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å', key: 'hard' },
    ]

    const difficultyList = container.getElementById('difficultyList')
    difficulties.forEach(diff => {
        const count = levels[diff.key]
        const time = levelTimes[diff.key]
        difficultyList.appendChild(DifficultyItem(diff.label, count, time))
    })

    return container
}
